name: Deploy to GitHub Pages
on:
  push:
    branches:
      - main
jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Transcode .svelte → UTF‑8 (build‑only)
        run: |
          find . -type f -name '*.svelte' -exec bash -c '
            file="$1"
            if ! iconv -f UTF-8 -t UTF-8 "$file" >/dev/null 2>&1; then
              echo "Converting $file from ISO-8859-1 to UTF-8"
              iconv -f ISO-8859-1 -t UTF-8 "$file" > "$file.tmp" && mv "$file.tmp" "$file"
            fi
          ' bash {} \;
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies + adapters
        run: |
          npm install
          npm install -D @sveltejs/adapter-static @sveltejs/vite-plugin-svelte
      - name: Create dummy TS config
        run: |
          mkdir -p .svelte-kit
          echo '{}' > .svelte-kit/tsconfig.json
      - name: Generate svelte.config.js
        run: |
          cat > svelte.config.js << 'EOF'
          import adapter from '@sveltejs/adapter-static';
          import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';
          /** @type {import('@sveltejs/kit').Config} */
          const config = {
            preprocess: vitePreprocess(),
            kit: {
              adapter: adapter({
                pages: 'build',
                assets: 'build',
                fallback: 'index.html',
                strict: false
              })
            }
          };
          export default config;
          EOF
      - name: Enable full prerendering
        run: |
          mkdir -p src/routes
          cat > src/routes/+layout.js << 'EOF'
          export const prerender = true;
          EOF
      - name: Build site
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
        run: npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build
  deploy:
    needs: build_site
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
